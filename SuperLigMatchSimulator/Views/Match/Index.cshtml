@using System.Text.Json
@using SuperLigMatchSimulator.Classes
@{
	ViewData["Title"] = "Index";
	Layout = null;
}

<script src="https://cdn.tailwindcss.com"></script>

<div class="container mx-auto px-2">
	<div class="flex">
		<!-- Left side for week match component -->
		<div class="w-1/4 pr-4">
			@await Component.InvokeAsync("_WeekMatchSelectorPartial", new { match = (WeekMatch)ViewBag.CurrentWeekMatches })
		</div>

		<!-- Right side for standings table -->
		<div class="w-3/4">
			<div class="py-4">
				<div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
					<div class="bg-gray-100 p-4">
						<div class="flex items-center space-x-4">
							<div class="flex items-center">
								<div class="w-4 h-4 bg-green-300 mr-2"></div>
								<span class="text-sm">2025-26 UEFA Konferans Ligi Lig A.</span>
							</div>
							<div class="flex items-center">
								<div class="w-4 h-4 bg-green-100 mr-2"></div>
								<span class="text-sm">2025-26 UEFA Şampyionlar Ligi 2. ET</span>
							</div>
							<div class="flex items-center">
								<div class="w-4 h-4 bg-blue-200 mr-2"></div>
								<span class="text-sm">2025-26 UEFA Avrupa Ligi 2. ET</span>
							</div>
							<div class="flex items-center">
								<div class="w-4 h-4 bg-yellow-200 mr-2"></div>
								<span class="text-sm">2025-26 UEFA Konferans Ligi 2. ET</span>
							</div>
							<div class="flex items-center">
								<div class="w-4 h-4 bg-red-200 mr-2"></div>
								<span class="text-sm">2025-26 1. Lig</span>
							</div>
						</div>
					</div>
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gray-50">
							<tr>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rank</th>
								<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Team</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Played</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Won</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Drawn</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Lost</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Goals For</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Goals Against</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Goal Diff</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Points</th>
								<th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Trend</th>
							</tr>
						</thead>
						<tbody id="standingsTableBody" class="bg-white divide-y divide-gray-200">
							<!-- Will be populated by JavaScript -->
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<script>

		if (@(ViewBag.ShouldInitialize ? "true" : "false"))
	{
		if (!localStorage.getItem('standings') || !localStorage.getItem('matches')) {
			localStorage.setItem('standings', '@Html.Raw(ViewBag.InitialStandings)');
			localStorage.setItem('matches', '@Html.Raw(ViewBag.InitialMatches)');

		}
	}

	// Standings tablosunu güncelle
	function updateStandingsTable() {
			const standings = JSON.parse(localStorage.getItem('standings')).map(item => {
	   const convertedItem = {};
	   for (const key in item) {
		   const lowercaseKey = key.charAt(0).toLowerCase() + key.slice(1);
		   convertedItem[lowercaseKey] = item[key];
	   }
	   return convertedItem;
	});;
		const tbody = document.getElementById('standingsTableBody');
		tbody.innerHTML = '';
		console.log(standings[0])
		standings.forEach((team, index) => {
			let rowColor = '';
			if (index === 0) rowColor = 'bg-green-300 text-black';
			else if (index === 1) rowColor = 'bg-green-100 text-black';
			else if (index === 2) rowColor = 'bg-blue-200 text-black';
			else if (index === 3) rowColor = 'bg-yellow-200 text-black';
			else if (index >= standings.length - 4) rowColor = 'bg-red-200 text-black';

			const row = `
				<tr class="${rowColor} hover:opacity-90 transition duration-200">
					<td class="px-2 py-2 text-xs text-sm font-medium">${getTrendIcon(team.trendDirection)} ${index + 1}</td>
					<td class="px-2 py-2 text-xs">
						<div class="flex items-center">
						
							<div class="flex-shrink-0 h-10 w-10 mr-3">
								<img class="h-10 w-10 rounded-full object-cover" src="${team.teamLogo}" alt="${team.team} Logo">
							</div>

							<div class="text-sm font-medium text-gray-900">${team.team}</div>
							${team.reductedPoints !== 0 ? `<div class="text-xs text-gray-500 mt-1">(${team.reductedPoints} puan)</div>` : ''}
						</div>
					</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-gray-500">${team.played}</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-green-600">${team.won}</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-yellow-600">${team.drawn}</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-red-600">${team.lost}</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-blue-600">${team.goalsFor}</td>
					<td class="px-2 py-2 text-xs text-center text-sm text-red-600">${team.goalsAgainst}</td>
					<td class="px-2 py-2 text-xs text-center text-sm ${team.goalDifference >= 0 ? 'text-green-600' : 'text-red-600'}">${team.goalDifference}</td>
					<td class="px-2 py-2 text-xs text-center text-sm font-semibold text-gray-900">${team.points}</td>
					
				</tr>
			`;
			tbody.innerHTML += row;
		});
	}

	function getTrendIcon(trend) {
		switch(trend) {
			case 0: return '<span class="text-green-600">↑</span>';
			case 1: return '<span class="text-red-600">↓</span>';
			default: return '<span class="text-gray-500">→</span>';
		}
	}



</script>
<script>
	document.addEventListener('DOMContentLoaded', function() {
		console.log("updated");
		updateStandingsTable();

	});
</script>